/*
 * rndpi - a C library for deep packet inspection on top of nDPI
 *
 * -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * Internal definitions
 *
 * -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * Copyright (c) 2015 Rocco Carbone <rocco@tecsiel.it>
 *
 */


#ifndef _PRIVATE_RNDPI_H_
#define _PRIVATE_RNDPI_H_


/* Library headers */
#include "rlibc.h"


/* nDPI headers */
#include "ndpi_api.h"


/* Enumerate of supported protocols (automatically generated via shell script) */
typedef enum
{
  RNDPI_PROTOCOL_FTP_CONTROL,
  RNDPI_PROTOCOL_MAIL_POP,
  RNDPI_PROTOCOL_MAIL_SMTP,
  RNDPI_PROTOCOL_MAIL_IMAP,
  RNDPI_PROTOCOL_DNS,
  RNDPI_PROTOCOL_IPP,
  RNDPI_PROTOCOL_HTTP,
  RNDPI_PROTOCOL_MDNS,
  RNDPI_PROTOCOL_NTP,
  RNDPI_PROTOCOL_NETBIOS,
  RNDPI_PROTOCOL_NFS,
  RNDPI_PROTOCOL_SSDP,
  RNDPI_PROTOCOL_BGP,
  RNDPI_PROTOCOL_SNMP,
  RNDPI_PROTOCOL_XDMCP,
  RNDPI_PROTOCOL_SMB,
  RNDPI_PROTOCOL_SYSLOG,
  RNDPI_PROTOCOL_DHCP,
  RNDPI_PROTOCOL_POSTGRES,
  RNDPI_PROTOCOL_MYSQL,
  RNDPI_PROTOCOL_TDS,
  RNDPI_PROTOCOL_DIRECT_DOWNLOAD_LINK,
  RNDPI_PROTOCOL_MAIL_POPS,
  RNDPI_PROTOCOL_APPLEJUICE,
  RNDPI_PROTOCOL_DIRECTCONNECT,
  RNDPI_PROTOCOL_SOCRATES,
  RNDPI_PROTOCOL_WINMX,
  RNDPI_PROTOCOL_VMWARE,
  RNDPI_PROTOCOL_MAIL_SMTPS,
  RNDPI_PROTOCOL_FILETOPIA,
  RNDPI_PROTOCOL_IMESH,
  RNDPI_PROTOCOL_KONTIKI,
  RNDPI_PROTOCOL_OPENFT,
  RNDPI_PROTOCOL_FASTTRACK,
  RNDPI_PROTOCOL_GNUTELLA,
  RNDPI_PROTOCOL_EDONKEY,
  RNDPI_PROTOCOL_BITTORRENT,
  RNDPI_PROTOCOL_EPP,
  RNDPI_CONTENT_AVI,
  RNDPI_CONTENT_FLASH,
  RNDPI_CONTENT_OGG,
  RNDPI_CONTENT_MPEG,
  RNDPI_CONTENT_QUICKTIME,
  RNDPI_CONTENT_REALMEDIA,
  RNDPI_CONTENT_WINDOWSMEDIA,
  RNDPI_CONTENT_MMS,
  RNDPI_PROTOCOL_XBOX,
  RNDPI_PROTOCOL_QQ,
  RNDPI_PROTOCOL_MOVE,
  RNDPI_PROTOCOL_RTSP,
  RNDPI_PROTOCOL_MAIL_IMAPS,
  RNDPI_PROTOCOL_ICECAST,
  RNDPI_PROTOCOL_PPLIVE,
  RNDPI_PROTOCOL_PPSTREAM,
  RNDPI_PROTOCOL_ZATTOO,
  RNDPI_PROTOCOL_SHOUTCAST,
  RNDPI_PROTOCOL_SOPCAST,
  RNDPI_PROTOCOL_TVANTS,
  RNDPI_PROTOCOL_TVUPLAYER,
  RNDPI_PROTOCOL_QQLIVE_VEOHTV,
  RNDPI_PROTOCOL_QQLIVE,
  RNDPI_PROTOCOL_THUNDER,
  RNDPI_PROTOCOL_SOULSEEK,
  RNDPI_PROTOCOL_HTTP_APPLICATION_VEOHTV,
  RNDPI_PROTOCOL_IRC,
  RNDPI_PROTOCOL_AYIYA,
  RNDPI_PROTOCOL_UNENCRYPED_JABBER,
  RNDPI_PROTOCOL_MSN ,
  RNDPI_PROTOCOL_OSCAR,
  RNDPI_PROTOCOL_YAHOO,
  RNDPI_PROTOCOL_BATTLEFIELD,
  RNDPI_PROTOCOL_QUAKE,
  RNDPI_PROTOCOL_IP_VRRP,
  RNDPI_PROTOCOL_STEAM,
  RNDPI_PROTOCOL_HALFLIFE2,
  RNDPI_PROTOCOL_WORLDOFWARCRAFT,
  RNDPI_PROTOCOL_TELNET,
  RNDPI_PROTOCOL_STUN,
  RNDPI_PROTOCOL_IP_IPSEC,
  RNDPI_PROTOCOL_IP_GRE,
  RNDPI_PROTOCOL_IP_ICMP,
  RNDPI_PROTOCOL_IP_IGMP,
  RNDPI_PROTOCOL_IP_EGP,
  RNDPI_PROTOCOL_IP_SCTP,
  RNDPI_PROTOCOL_IP_OSPF,
  RNDPI_PROTOCOL_IP_IP_IN_IP,
  RNDPI_PROTOCOL_RTP,
  RNDPI_PROTOCOL_RDP,
  RNDPI_PROTOCOL_VNC,
  RNDPI_PROTOCOL_PCANYWHERE,
  RNDPI_PROTOCOL_SSL,
  RNDPI_PROTOCOL_SSH,
  RNDPI_PROTOCOL_USENET,
  RNDPI_PROTOCOL_MGCP,
  RNDPI_PROTOCOL_IAX,
  RNDPI_PROTOCOL_TFTP,
  RNDPI_PROTOCOL_AFP,
  RNDPI_PROTOCOL_STEALTHNET,
  RNDPI_PROTOCOL_AIMINI,
  RNDPI_PROTOCOL_SIP,
  RNDPI_PROTOCOL_TRUPHONE,
  RNDPI_PROTOCOL_IP_ICMPV6,
  RNDPI_PROTOCOL_DHCPV6,
  RNDPI_PROTOCOL_ARMAGETRON,
  RNDPI_PROTOCOL_CROSSFIRE,
  RNDPI_PROTOCOL_DOFUS,
  RNDPI_PROTOCOL_FIESTA,
  RNDPI_PROTOCOL_FLORENSIA,
  RNDPI_PROTOCOL_GUILDWARS,
  RNDPI_PROTOCOL_HTTP_APPLICATION_ACTIVESYNC,
  RNDPI_PROTOCOL_KERBEROS,
  RNDPI_PROTOCOL_LDAP,
  RNDPI_PROTOCOL_MAPLESTORY,
  RNDPI_PROTOCOL_MSSQL,
  RNDPI_PROTOCOL_PPTP,
  RNDPI_PROTOCOL_WARCRAFT3,
  RNDPI_PROTOCOL_WORLD_OF_KUNG_FU,
  RNDPI_PROTOCOL_MEEBO,
  RNDPI_SERVICE_FACEBOOK,
  RNDPI_SERVICE_TWITTER,
  RNDPI_PROTOCOL_DROPBOX,
  RNDPI_SERVICE_GMAIL,
  RNDPI_SERVICE_GOOGLE_MAPS,
  RNDPI_SERVICE_YOUTUBE,
  RNDPI_PROTOCOL_SKYPE,
  RNDPI_SERVICE_GOOGLE,
  RNDPI_PROTOCOL_DCERPC,
  RNDPI_PROTOCOL_NETFLOW,
  RNDPI_PROTOCOL_SFLOW,
  RNDPI_PROTOCOL_HTTP_CONNECT,
  RNDPI_PROTOCOL_HTTP_PROXY,
  RNDPI_PROTOCOL_CITRIX,
  RNDPI_SERVICE_NETFLIX,
  RNDPI_SERVICE_LASTFM,
  RNDPI_SERVICE_GROOVESHARK,
  RNDPI_PROTOCOL_SKYFILE_PREPAID,
  RNDPI_PROTOCOL_SKYFILE_RUDICS,
  RNDPI_PROTOCOL_SKYFILE_POSTPAID,
  RNDPI_PROTOCOL_CITRIX_ONLINE,
  RNDPI_SERVICE_APPLE,
  RNDPI_PROTOCOL_WEBEX,
  RNDPI_SERVICE_WHATSAPP,
  RNDPI_SERVICE_APPLE_ICLOUD,
  RNDPI_PROTOCOL_VIBER,
  RNDPI_SERVICE_APPLE_ITUNES,
  RNDPI_PROTOCOL_RADIUS,
  RNDPI_PROTOCOL_WINDOWS_UPDATE,
  RNDPI_PROTOCOL_TEAMVIEWER,
  RNDPI_SERVICE_TUENTI,
  RNDPI_PROTOCOL_LOTUS_NOTES,
  RNDPI_PROTOCOL_SAP,
  RNDPI_PROTOCOL_GTP,
  RNDPI_PROTOCOL_UPNP,
  RNDPI_PROTOCOL_LLMNR,
  RNDPI_PROTOCOL_REMOTE_SCAN,
  RNDPI_PROTOCOL_SPOTIFY,
  RNDPI_CONTENT_WEBM,
  RNDPI_PROTOCOL_H323,
  RNDPI_PROTOCOL_OPENVPN,
  RNDPI_PROTOCOL_NOE,
  RNDPI_PROTOCOL_CISCOVPN,
  RNDPI_PROTOCOL_TEAMSPEAK,
  RNDPI_PROTOCOL_TOR,
  RNDPI_PROTOCOL_SKINNY,
  RNDPI_PROTOCOL_RTCP,
  RNDPI_PROTOCOL_RSYNC,
  RNDPI_PROTOCOL_ORACLE,
  RNDPI_PROTOCOL_CORBA,
  RNDPI_PROTOCOL_UBUNTUONE,
  RNDPI_PROTOCOL_WHOIS_DAS,
  RNDPI_PROTOCOL_COLLECTD,
  RNDPI_PROTOCOL_SOCKS5,
  RNDPI_PROTOCOL_SOCKS4,
  RNDPI_PROTOCOL_RTMP,
  RNDPI_PROTOCOL_FTP_DATA,
  RNDPI_SERVICE_WIKIPEDIA,
  RNDPI_PROTOCOL_ZMQ,
  RNDPI_SERVICE_AMAZON,
  RNDPI_SERVICE_EBAY,
  RNDPI_SERVICE_CNN,
  RNDPI_PROTOCOL_MEGACO,
  RNDPI_PROTOCOL_REDIS,
  RNDPI_PROTOCOL_PANDO,
  RNDPI_PROTOCOL_VHUA,
  RNDPI_PROTOCOL_TELEGRAM,
  RNDPI_SERVICE_VEVO,
  RNDPI_SERVICE_PANDORA,
  RNDPI_PROTOCOL_QUIC,
  RNDPI_PROTOCOL_WHATSAPP_VOICE,

  RNDPI_PROTOCOL_UNKNOWN

} rndpi_id;


/* Functions to bless a packet */
typedef void rndpi_bless_f (struct ndpi_detection_module_struct * ndpi_struct, struct ndpi_flow_struct * flow);


/* Structure to represent a single protocol */
typedef struct rndpi_protocol
{
  rndpi_id id;             /* enumerate */
  char * name;             /* name      */
  char * description;      /* textual   */
  rndpi_bless_f * bless;   /* dissector */
} rndpi_protocol_t;


/* Structure to represent a handle */
struct rndpi
{
  void * handle;
  void * flow;
};


/* Public functions */
unsigned ndpi_protocol_count (void);
rndpi_protocol_t * ndpi_lookup_by_id (rndpi_id id);
rndpi_protocol_t * ndpi_lookup_by_name (char * name);
char ** ndpi_protocol_names (void);
char ** ndpi_protocol_not_implemented (void);
void * ndpi_init (void);                                                      /* Initialize nDPI library         */
void ndpi_term (void * ndpi);                                                 /* Terminate nDPI library          */
void * ndpi_flow_alloc (void);                                                /* Allocate memory to keep a flow  */
void ndpi_flow_free (void * flow);                                            /* Free memory used to keep a flow */
uint16_t ndpi_ipv4_pkt (void * pkt, uint32_t len, void * ndpi, void * flow);  /* Process an IPv4 packet          */

/* To be reworked */
void ndpi_bind_ipv4_pkt (void * pkt, uint32_t len, void * flow);              /* Bind an IPv4 packet to a flow   */
unsigned ndpi_protocol (void * f);


#endif /* _PRIVATE_RNDPI_H_ */
