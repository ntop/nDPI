#
# Simple non-autotools dependent makefile
#
# ./autogen.sh
# cd src/lib
# make Makefile
#
AR = @AR@
CC = @CC@
RANLIB = @RANLIB@
#
# Installation directories
#
prefix     = @prefix@
libdir     = @libdir@
includedir = @includedir@/ndpi
CFLAGS     += -fPIC -DPIC -I../include -Ithird_party/include -DNDPI_LIB_COMPILATION @CFLAGS@ @CUSTOM_NDPI@
LDFLAGS    = @LDFLAGS@
LIBS       = @ADDITIONAL_LIBS@ @LIBS@

OBJECTS   = $(patsubst protocols/%.c, protocols/%.o, $(wildcard protocols/*.c)) $(patsubst third_party/src/%.c, third_party/src/%.o, $(wildcard third_party/src/*.c)) $(patsubst ./%.c, ./%.o, $(wildcard ./*.c))
HEADERS   = $(wildcard ../include/*.h)
NDPI_VERSION_MAJOR   = @NDPI_MAJOR@
NDPI_LIB_STATIC      = libndpi.a
NDPI_LIB_SHARED_BASE = libndpi.so
NDPI_LIB_SHARED      = $(NDPI_LIB_SHARED_BASE).@NDPI_VERSION_SHORT@
NDPI_LIBS            = $(NDPI_LIB_STATIC) $(NDPI_LIB_SHARED)
USE_HOST_LIBGCRYPT   = @USE_HOST_LIBGCRYPT@

ifneq ($(USE_HOST_LIBGCRYPT),0)
TMP_OBJS := $(OBJECTS)
OBJECTS   = $(filter-out third_party/src/gcrypt_light.o,$(TMP_OBJS))
endif

ifneq ($(OS),Windows_NT)
OS := $(shell uname)
endif
BUILD_MINGW    		 = @BUILD_MINGW@

ifeq ($(OS),Darwin)
CC=clang
SONAME_FLAG=
else
ifneq ($(BUILD_MINGW),)
NDPI_LIB_SHARED_BASE = libndpi
NDPI_LIB_SHARED      = $(NDPI_LIB_SHARED_BASE)-@NDPI_VERSION_SHORT@.dll
else
SONAME_FLAG=-Wl,-soname,$(NDPI_LIB_SHARED_BASE).$(NDPI_VERSION_MAJOR)
endif
endif

all: $(NDPI_LIBS)

ndpi_main.c: ndpi_content_match.c.inc

$(NDPI_LIB_STATIC): $(OBJECTS)
	   $(AR) rc $@ $(OBJECTS)
	   $(RANLIB) $@      

$(NDPI_LIB_SHARED): $(OBJECTS)
	$(CC) -shared -fPIC $(SONAME_FLAG) -o $@ $(LDFLAGS) $(OBJECTS) $(LIBS)
	ln -fs $(NDPI_LIB_SHARED) $(NDPI_LIB_SHARED_BASE)
	ln -fs $(NDPI_LIB_SHARED) $(NDPI_LIB_SHARED_BASE).$(NDPI_VERSION_MAJOR)

%.o: %.c $(HEADERS) Makefile
	$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

clean:
	/bin/rm -f $(NDPI_LIB_STATIC) $(OBJECTS) *.o *.so *.lo libndpi.so*

distdir:
	cp ndpi_content_match.c.inc '$(distdir)/'
	find . -type d | xargs -I'{}' mkdir -p '$(distdir)/{}'
	find ../include -type f -name '*.h' | xargs -I'{}' cp '{}' '$(distdir)/{}'
	find . -type f -name '*.c' -o -name '*.h' | xargs -I'{}' cp '{}' '$(distdir)/{}'

distclean: clean
	/bin/rm -f Makefile

cppcheck:
	cppcheck --template='{file}:{line}:{severity}:{message}' --quiet --enable=all --force -I ../include *.c protocols/*.c

install: $(NDPI_LIBS)
	mkdir -p $(DESTDIR)$(libdir)
	cp $(NDPI_LIBS) $(DESTDIR)$(libdir)/
	cp -P $(NDPI_LIB_SHARED_BASE) $(DESTDIR)$(libdir)/
	cp -P $(NDPI_LIB_SHARED_BASE).$(NDPI_VERSION_MAJOR) $(DESTDIR)$(libdir)/
	mkdir -p $(DESTDIR)$(includedir)
	cp ../include/*.h $(DESTDIR)$(includedir)
